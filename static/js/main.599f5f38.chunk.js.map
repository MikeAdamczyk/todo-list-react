{"version":3,"sources":["Form/styled.js","Form/index.js","Tasks/styled.js","Tasks/index.js","Buttons/styled.js","Buttons/index.js","SectionAddTask/styled.js","SectionAddTask/index.js","SectionDisplayTasks/styled.js","SectionDisplayTasks/index.js","Header/index.js","Footer/styled.js","Footer/index.js","Container/styled.js","Container/index.js","theme.js","App.js","serviceWorker.js","index.js"],"names":["InputForm","styled","form","theme","colors","backgroundColor","breakpoints","mobile","Input","input","Button","button","Form","addNewTask","useState","newTaskContent","setNewTaskContent","onSubmit","event","preventDefault","trimmedNewTaskContent","trim","value","type","placeholder","onChange","target","List","ul","Item","li","hidden","css","Content","span","done","toggleDone","remove","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","key","id","onClick","content","ButtonBox","ControlButton","Buttons","toggleHideDone","setAllDone","length","disabled","every","Header","h2","SectionAddTask","title","body","ListBox","div","SectionDisplayTasks","extraHeaderContent","FooterInfo","footer","Footer","Div","Container","children","getInitialTasks","tasksFromLocalStorage","localStorage","getItem","JSON","parse","App","setHideDone","setTasks","useEffect","setItem","stringify","filter","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.599f5f38.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const InputForm = styled.form`\n    background-color: ${({theme})=> theme.colors.backgroundColor};\n    padding: 20px;\n    margin-bottom: 10px;\n    display: grid;\n    grid-template-columns: 1fr auto;\n    grid-gap: 20px;\n\n    @media (max-width: ${({ theme }) => theme.breakpoints.mobile}px) {\n        grid-template-columns: 1fr;\n    }\n`;\n\nexport const Input = styled.input`\n    padding: 10px;\n    border: 2px solid #f2f2f2;\n`;\n\nexport const Button = styled.button`\n    padding: 10px;\n    background-color: hsl(180, 100%, 25%);\n    border: none;\n    color: white;\n    transition: 0.5s;\n\n    &:hover {\n    background-color: hsl(180, 100%, 35%);\n    transform: scale(1.1);\n    cursor: pointer;\n    }\n\n    &:active {\n    background-color: hsl(180, 100%, 45%);\n    }\n\n    @media(max-width: 767px) {\n        &:hover {\n            transform: scaleY(1.1);\n        }\n    }\n`;","import React, { useState } from \"react\";\nimport { InputForm, Input, Button } from \"./styled\";\n\nconst Form = ({ addNewTask }) => {\n\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\n\n    const onFormSubmit = (event) => {\n        event.preventDefault();\n        const trimmedNewTaskContent = newTaskContent.trim();\n\n        if (!trimmedNewTaskContent) {\n            return;\n        }\n\n        addNewTask(trimmedNewTaskContent);\n        setNewTaskContent(\"\");\n    };\n\n    return (\n        <InputForm onSubmit={onFormSubmit}>\n            <Input\n                value={newTaskContent}\n                type=\"text\"\n                placeholder=\"Co jest do zrobienia?\"\n                onChange={({ target }) => setNewTaskContent(target.value)}\n            />\n            <Button>Dodaj zadanie!</Button>\n        </InputForm>\n    )\n};\n\nexport default Form;","import styled, { css } from \"styled-components\";\n\nexport const List = styled.ul`\n    background-color: white;\n    padding: 0px;\n    margin: 0px;\n    display: grid;\n    list-style: none;\n`;\n\nexport const Item = styled.li`\n    padding: 10px;\n    border-bottom: 2px solid #f2f2f2;\n    display: grid;\n    grid-template-columns: auto 1fr auto;\n    grid-gap: 20px;\n    align-items: center;\n\n    ${({ hidden }) => hidden && css`\n        display: none;\n    `}\n`;\n\nexport const Content = styled.span`\n    overflow-wrap: break-word;\n    word-wrap: break-word;\n    word-break: break-all;\n    hyphens: auto;\n    text-align: justify;\n\n    ${({ done }) => done && css`\n        text-decoration: line-through;\n        color: #ccc;\n    `}\n`;\n\nexport const Button = styled.button`\n    text-decoration: none;\n    min-width: 40px;\n    min-height: 40px;\n    padding: 10px;\n    color: white;\n    border: none;\n    transition: 0.5s;\n\n    ${({ toggleDone }) => toggleDone && css`\n        background-color: hsl(120, 100%, 25%);\n\n        &:hover{\n            background-color: hsl(120, 100%, 35%);\n            cursor: pointer;\n        }\n\n        &:active{\n            background-color: hsl(120, 100%, 45%);\n        }\n    `}\n\n    ${({ remove }) => remove && css`\n        background-color: hsl(0, 100%, 40%);\n\n        &:hover{\n            background-color: hsl(0, 100%, 50%);\n            cursor: pointer;\n        }\n\n        &:active{\n            background-color: hsl(0, 100%, 70%);\n        }\n    `}\n`;","import React from \"react\";\nimport { List, Item, Content, Button } from \"./styled\";\n\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\n\n  <List>\n    {tasks.map(task => (\n\n      <Item\n        key={task.id}\n        hidden={task.done && hideDone}\n      >\n        <Button\n          toggleDone\n          onClick={() => toggleTaskDone(task.id)}\n        >\n          {task.done ? \"âœ“\" : \"\"}\n        </Button>\n\n        <Content done={task.done}>\n          {task.content}\n        </Content>\n\n        <Button\n          remove\n          onClick={() => removeTask(task.id)}\n        >\n          X\n        </Button>\n\n      </Item>\n    ))}\n  </List>\n);\n\nexport default Tasks;","import styled from \"styled-components\";\n\nexport const ButtonBox = styled.span`\n    display: flex;\n    align-content: center;\n    flex-wrap: wrap;\n\n    @media (max-width: ${({ theme }) => theme.breakpoints.mobile}px) {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-content: center;\n    }\n`;\n\nexport const ControlButton = styled.button`\n    font-size: 15px;\n    color: hsl(180, 100%, 25%);\n    background: none;\n    border: none;\n    margin-left: 20px;\n    transition: 0.5s;\n    padding: 10px;\n\n    &:hover {\n        cursor: pointer;\n        color: hsl(180, 100%, 35%);\n    }\n\n    &:active {\n        cursor: pointer;\n        color: hsl(180, 100%, 45%);\n    }\n\n    &:disabled {\n        cursor: pointer;\n        color: #ccc;\n    }\n`;","import React from \"react\";\nimport { ButtonBox, ControlButton } from \"./styled\";\n\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\n\n  tasks.length > 0 && (\n    <ButtonBox>\n      <ControlButton\n        onClick={toggleHideDone}\n        disabled={tasks.every(({ done }) => !done)}\n      >\n        {hideDone ? \"PokaÅ¼\" : \"Ukryj\"} ukoÅ„czone\n      </ControlButton>\n\n      <ControlButton\n        onClick={setAllDone}\n        disabled={tasks.every(({ done }) => done)}\n      >\n        UkoÅ„cz wszystkie\n      </ControlButton>\n    </ButtonBox>\n  )\n);\n\nexport default Buttons;","import styled from \"styled-components\";\n\nexport const Header = styled.h2`\n    background-color: ${({ theme }) => theme.colors.backgroundColor};\n    padding: 20px;\n    margin-bottom: 3px;\n`;","import React from \"react\";\nimport { Header } from \"./styled\";\n\nconst SectionAddTask = ({ title, body }) => (\n\n    <section>\n        <Header>{title}</Header>\n        {body}\n    </section>\n);\n\nexport default SectionAddTask;\n\n\n\n\n\n\n\n\n","import styled from \"styled-components\";\n\nexport const Header = styled.h2`\n    background-color: ${({ theme }) => theme.colors.backgroundColor};\n    padding: 20px;\n    margin-bottom: 3px;\n    display: grid;\n    grid-template-columns: 1fr auto;\n\n    @media (max-width: ${({ theme }) => theme.breakpoints.mobile}px) {\n        grid-template-columns: auto;\n    }\n`;\n\nexport const ListBox = styled.div`\n    background-color: ${({ theme }) => theme.colors.backgroundColor};\n    padding: 20px;\n`;","import React from \"react\";\nimport { Header, ListBox } from \"./styled\";\n\nconst SectionDisplayTasks = ({ title, body, extraHeaderContent }) => (\n    <section>\n        <Header>\n            <span>{title}</span>\n            {extraHeaderContent}\n        </Header>\n\n        <ListBox>\n            {body}\n        </ListBox>\n    </section>\n);\n\nexport default SectionDisplayTasks;","import React from \"react\";\n\nconst Header = ({title}) => (\n    <header>\n        <h1>{title}</h1>\n    </header>\n);\n\nexport default Header;","import styled from \"styled-components\";\n\nexport const FooterInfo = styled.footer`\n    text-align: center;\n    margin: 20px auto;\n    font-size: 14px;\n    color: #ccc;\n`;","import React from \"react\";\nimport { FooterInfo } from \"./styled\";\n\nconst Footer = ({ title }) => (\n    <FooterInfo>\n        {title}\n    </FooterInfo>\n);\n\nexport default Footer;","import styled from \"styled-components\";\n\nexport const Div = styled.div`\n    max-width: 900px;\n    margin: 0 auto;\n    padding: 20px;\n`;","import React from \"react\";\nimport { Div } from \"./styled\";\n\nconst Container = ({ children }) => (\n\n    <Div>\n        {children}\n    </Div>\n\n);\n\nexport default Container;","export const theme = {\n    colors: {\n        backgroundColor: \"white\",\n    },\n\n    breakpoints: {\n        mobile: 767,\n    }\n};","import React, { useState, useEffect } from \"react\";\nimport Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport SectionAddTask from \"./SectionAddTask\";\nimport SectionDisplayTasks from \"./SectionDisplayTasks\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Container from \"./Container\";\nimport { ThemeProvider } from \"styled-components\";\nimport { theme } from \"./theme\";\n\nconst getInitialTasks = () => {\n  const tasksFromLocalStorage = localStorage.getItem(\"tasks\");\n\n  return tasksFromLocalStorage\n    ? JSON.parse(tasksFromLocalStorage)\n    : []\n};\n\nfunction App() {\n  const [hideDone, setHideDone] = useState(false);\n  const [tasks, setTasks] = useState(getInitialTasks);\n\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n\n  const toggleHideDone = () => {\n    setHideDone(hideDone => !hideDone)\n  };\n\n  const removeTask = (id) => {\n    setTasks(tasks => tasks.filter(task => task.id !== id))\n  };\n\n  const toggleTaskDone = (id) => {\n    setTasks(tasks => tasks.map(task => {\n\n      if (task.id === id) {\n        return {\n          ...task,\n          done: !task.done\n        };\n      };\n\n      return task;\n    }));\n  };\n\n  const setAllDone = () => {\n    setTasks(tasks => tasks.map(task => ({\n      ...task,\n      done: true,\n    })))\n  };\n\n  const addNewTask = (content) => {\n    setTasks(tasks => [\n      ...tasks,\n      {\n        content,\n        done: false,\n        id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\n      },\n    ]);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n\n      <Container>\n\n        <Header title=\"Lista zadaÅ„\" />\n\n        <SectionAddTask\n          title=\"Dodaj nowe zadanie\"\n          body={<Form addNewTask={addNewTask} />}\n        />\n\n        <SectionDisplayTasks\n          title=\"Lista zadaÅ„\"\n          extraHeaderContent={\n            <Buttons\n              tasks={tasks}\n              hideDone={hideDone}\n              toggleHideDone={toggleHideDone}\n              setAllDone={setAllDone}\n            />\n          }\n          body={\n            <Tasks\n              tasks={tasks}\n              hideDone={hideDone}\n              removeTask={removeTask}\n              toggleTaskDone={toggleTaskDone}\n\n            />\n          }\n        />\n\n        <Footer title=\"Â© MichaÅ‚ Adamczyk 2020. Wszystkie prawa zastrzeÅ¼one!\" />\n\n      </Container>\n\n    </ThemeProvider>\n  );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}