{"version":3,"sources":["Form/index.js","Tasks/index.js","Buttons/index.js","SectionAddTask/index.js","SectionDisplayTasks/index.js","Header/index.js","Footer/index.js","Container/index.js","App.js","serviceWorker.js","index.js"],"names":["Form","className","type","placeholder","Tasks","tasks","hideDoneTasks","map","task","done","content","Buttons","length","disabled","every","SectionAddTask","title","body","SectionDisplayTasks","extraHeaderContent","Header","Footer","Container","children","id","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"yVASeA,G,UANF,kBACT,0BAAMC,UAAU,iBACZ,2BAAOA,UAAU,iBAAiBC,KAAK,OAAOC,YAAY,0BAC1D,4BAAQF,UAAU,mBAAlB,qBC0BOG,G,MA7BD,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,cAAT,OAEV,wBAAIL,UAAU,sBAEXI,EAAME,KAAI,SAAAC,GAAI,OAEX,wBAAIP,UAAS,wDAEXO,EAAKC,MAAQH,EAAgB,iCAAmC,KAGhE,4BAAQL,UAAU,kCACfO,EAAKC,KAAO,SAAM,IAGrB,0BAAMR,UAAS,gCAA2BO,EAAKC,KAAO,8BAAgC,KACnFD,EAAKE,SAGR,4BAAQT,UAAU,8BAAlB,YCGGU,G,MAtBC,SAAC,GAAD,IAAEN,EAAF,EAAEA,MAAOC,EAAT,EAASA,cAAT,OAEZD,EAAMO,OAAS,GACX,0BAAMX,UAAU,2BAEZ,4BAAQA,UAAU,+BAClBY,SAAUR,EAAMS,OAAM,qBAAEL,SAEvBH,EAAgB,aAAU,QAH3B,mBAMA,4BACAL,UAAU,+BACVY,SAAUR,EAAMS,OAAM,qBAAEL,SAFxB,4BCHGM,G,MARQ,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,KAAT,OAEnB,6BAAShB,UAAU,WACf,wBAAIA,UAAU,mBAAmBe,GAChCC,KCaMC,G,MAjBa,SAAC,GAAD,IAAEF,EAAF,EAAEA,MAAOC,EAAT,EAASA,KAAME,EAAf,EAAeA,mBAAf,OAExB,6BAASlB,UAAU,gBAEf,wBAAIA,UAAU,wBACV,8BAAOe,GACNG,GAGL,yBAAKlB,UAAU,yBACVgB,MCLEG,EANA,SAAC,GAAD,IAAEJ,EAAF,EAAEA,MAAF,OACX,gCACI,4BAAKA,KCKEK,G,MANA,SAAC,GAAD,IAAEL,EAAF,EAAEA,MAAF,OACX,4BAAQf,UAAU,UACbe,KCMMM,G,MARG,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAF,OAElB,yBAAKtB,UAAU,aACVsB,KCIClB,EAAQ,CACZ,CAACmB,GAAI,EAAGd,QAAS,uBAAcD,MAAM,GACrC,CAACe,GAAI,EAAGd,QAAS,6BAAoBD,MAAM,GAC3C,CAACe,GAAI,EAAGd,QAAS,sCAAkCD,MAAM,IA4B5CgB,MAvBf,WACE,OACE,kBAAC,EAAD,KAEI,kBAAC,EAAD,CAAQT,MAAM,qBAEd,kBAAC,EAAD,CACIA,MAAM,qBACNC,KAAM,kBAAC,EAAD,QAGV,kBAAC,EAAD,CACID,MAAM,mBACNG,mBAAoB,kBAAC,EAAD,CAASd,MAAOA,EAAOC,eAfjC,IAgBVW,KAAM,kBAAC,EAAD,CAAOZ,MAAOA,EAAOC,eAhBjB,MAmBd,kBAAC,EAAD,CAAQU,MAAM,wECvBFU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.c2111431.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nconst Form = () => (\n    <form className=\"addTask__form\">\n        <input className=\"addTask__input\" type=\"text\" placeholder=\"Co jest do zrobienia?\"/>\n        <button className=\"addTask__button\">Dodaj zadanie!</button>\n    </form>\n)\nexport default Form;","import React from \"react\";\nimport \"./style.css\";\n\nconst Tasks = ({tasks, hideDoneTasks}) => (\n\n    <ul className=\"displayTasks__list\">\n\n      {tasks.map(task => (\n        \n          <li className={`\n          displayTasks__listItem\n          ${task.done && hideDoneTasks ? \"displayTasks__listItem--hidden\" : \"\"}`}\n          >\n          \n            <button className=\"displayTasks__toggleDoneButton\">\n              {task.done ? \"✓\" : \"\"}\n            </button>\n                  \n            <span className={`displayTasks__content ${task.done ? \"displayTasks__content--done\" : \"\"}`}>\n              {task.content}\n            </span>\n          \n            <button className=\"displayTasks__removeButton\">\n              X\n            </button>\n\n          </li>\n      ))}\n\n    </ul>\n);\n\nexport default Tasks;","import React from \"react\";\nimport \"./style.css\"\n\nconst Buttons = ({tasks, hideDoneTasks}) => (\n\n    tasks.length > 0 && (\n        <span className=\"displayTasks__buttonBox\">\n\n            <button className=\"displayTasks__controlButtons\"\n            disabled={tasks.every(({done}) => !done)}\n            >\n            {hideDoneTasks ? \"Pokaż\" : \"Ukryj\"} ukończone\n            </button>\n\n            <button\n            className=\"displayTasks__controlButtons\"\n            disabled={tasks.every(({done}) => done)}\n            >\n            Ukończ wszystkie\n            </button>\n\n        </span>\n        )\n);\n\nexport default Buttons;","import React from \"react\";\nimport \"./style.css\";\n\nconst SectionAddTask = ({title, body}) => (\n\n    <section className=\"addTask\">\n        <h2 className=\"addTask__header\">{title}</h2>\n        {body}\n    </section>\n);\n\nexport default SectionAddTask;\n\n\n\n\n\n\n\n\n","import React from \"react\";\nimport \"./style.css\";\n\nconst SectionDisplayTasks = ({title, body, extraHeaderContent} ) => (\n\n    <section className=\"displayTasks\">\n\n        <h2 className=\"displayTasks__header\">\n            <span>{title}</span>\n            {extraHeaderContent}\n        </h2>\n\n        <div className=\"displayTasks__listBox\">\n            {body}\n        </div>\n\n    </section>\n\n);\n\nexport default SectionDisplayTasks;","import React from \"react\";\n\nconst Header = ({title}) => (\n    <header>\n        <h1>{title}</h1>\n    </header>\n);\n\nexport default Header;","import React from \"react\";\nimport \"./style.css\";\n\nconst Footer = ({title}) => (\n    <footer className=\"footer\">\n        {title}\n    </footer>\n);\n\nexport default Footer;","import React from \"react\";\nimport \"./style.css\";\n\nconst Container = ({children}) => (\n\n<div className=\"container\">\n    {children}\n</div>\n\n);\n\nexport default Container;","import React from \"react\";\nimport Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport SectionAddTask from \"./SectionAddTask\";\nimport SectionDisplayTasks from \"./SectionDisplayTasks\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Container from \"./Container\";\n\nconst tasks = [\n  {id: 1, content: \"kupić wodę\", done: true},\n  {id: 2, content: \"posprzątać biuro\", done: false},\n  {id: 3, content: \"pobiegać min. 30 min wieczorem\", done: false},\n];\n\nconst hideDoneTasks = false;\n\nfunction App() {\n  return (\n    <Container>\n\n        <Header title=\"Lista zadań\"/>\n\n        <SectionAddTask\n            title=\"Dodaj nowe zadanie\"\n            body={<Form/>}\n        />\n\n        <SectionDisplayTasks\n            title=\"Lista zadań\"\n            extraHeaderContent={<Buttons tasks={tasks} hideDoneTasks={hideDoneTasks}/>}\n            body={<Tasks tasks={tasks} hideDoneTasks={hideDoneTasks}/>}\n        />\n\n        <Footer title=\"© Michał Adamczyk 2020. Wszystkie prawa zastrzeżone!\" />\n\n    </Container>\n  );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}